var documenterSearchIndex = {"docs":
[{"location":"howto/#Howto-FAQ","page":"Howto","title":"Howto FAQ","text":"","category":"section"},{"location":"howto/#Images-are-shown-in-the-wrong-place-in-tmux","page":"Howto","title":"Images are shown in the wrong place in tmux","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Set sleep_secs greater than 0. Use a dedicated tmux session.","category":"page"},{"location":"howto/#Weird-errors","page":"Howto","title":"Weird errors","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Increase the value of sleep_secs.","category":"page"},{"location":"howto/#Images-overflow-the-size-of-the-pane","page":"Howto","title":"Images overflow the size of the pane","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Shouldn't happen with smart_size=true. Check that cell_size is accurate and set it manually, if necessary.","category":"page"},{"location":"howto/","page":"Howto","title":"Howto","text":"The problem is that the iTerm-protocol-imgcat ignores \"height\" if \"width\" is given.","category":"page"},{"location":"howto/","page":"Howto","title":"Howto","text":"Set an imgcat_cmd that uses only the height or width","category":"page"},{"location":"howto/#Tmux-does-not-have-scrollback-for-images","page":"Howto","title":"Tmux does not have scrollback for images","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Use, e.g., nrows=2, redraw_previous=1. You may have to set an imgcat_cmd that only uses the height.","category":"page"},{"location":"howto/#Images-disappear-when-I-switch-windows-in-tmux","page":"Howto","title":"Images disappear when I switch windows in tmux","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"This is a fundamental restriction of tmux. Use a dedicated tmux session in a different window. Use WezTerm multiplexer instead.","category":"page"},{"location":"howto/#I-can't-keep-track-of-which-image-is-from-which-command","page":"Howto","title":"I can't keep track of which image is from which command","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Use MuxDisplay.display with the title option","category":"page"},{"location":"howto/#The-prompt-is-overwriting-the-image","page":"Howto","title":"The prompt is overwriting the image","text":"","category":"section"},{"location":"howto/","page":"Howto","title":"Howto","text":"Occurs only with clear=false or redraw_previous. Since we disable the prompt, this manifests as images being \"on top of each other\".","category":"page"},{"location":"howto/","page":"Howto","title":"Howto","text":"Use tput as part of the imgcat_cmd to solve this","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"The following functions constitute the public interface of the MuxDisplay package:","category":"page"},{"location":"api/","page":"API","title":"API","text":"MuxDisplay.enable\nMuxDisplay.enabled\nMuxDisplay.set_options\nMuxDisplay.display\nMuxDisplay.disable\nMuxDisplay.install_cellsize","category":"page"},{"location":"api/#MuxDisplay.enable","page":"API","title":"MuxDisplay.enable","text":"Enable display via MuxDisplay\n\nMuxDisplay.enable(;\n    multiplexer = :tmux,\n    target_pane,  # mandatory keyword argument\n    verbose = true,\n    tmpdir = mktempdir(),\n    mux_bin = <\"tmux\" | \"wezterm\">\n    nrows = 1,\n    clear = MuxDisplay.needs_clear(Val(multiplexer)),\n    smart_size = true,\n    scale = 1.0,\n    shell = \"\",\n    use_pixels = false,\n    redraw_previous = (clear ? (nrows - 1) : 0),\n    imgcat = \"\",\n    dry_run = false,\n    only_write_files = false,\n    use_filenames_as_title = false,\n    sleep_secs = <automatic>,\n    cell_size = (0, 0),\n)\n\nenables Julia's builtin display system to show objects that have an image/png or image/jpeg representation the pane of a terminal multiplexer pane, relying on a suitable terminal emulator's ability to render images. This works by writing the data to a file in a temporary directory and then calling a suitable imgcat program to show that file in the terminal.\n\nArguments\n\nmultiplexer: The terminal multiplex to use for displaying graphics. One of :tmux, :wezterm.\ntarget_pane: A specification for which multiplexer pane to use as a display.  If the multiplexer is :tmux, this can either be an integer indicating a pane in the current tmux window, or a specification of the form \"session:window.pane\" to use a pane in an arbitrary window of a running tmux session. See The pane number can be obtained by running tmux display -p '#{pane_index}' in a particular pane (or via the C-b q shortcut) . If the multiplexer is :wezterm, this should be the WezTerm pane id, which can be obtained from the WEZTERM_PANE environment variable inside that pane.\nmux_bin: The executable for the multiplexer, \"tmux\" if multiplexer is :tmux, and \"wezterm\" if multiplexer is :wezterm. This can be set to an absolute path if the executable is not in the shell's PATH.\nverbose: If true, show information about the display that is being activated.\ntmpdir: The directory to which to write the temporary files for each invocation of display. The files will be consecutively numbered, e.g., 001.png, 002.png, etc. The default mktempdir() results in a directory that is automatically deleted on exit. Passing an existing directory will cause the image files to persist in that folder.\nimgcat: The command to be used for displaying an image file. It should contain any of the following placeholder strings, which will be substituted before executing the command:\n{file}: The absolute path to the temporary image file\n{height}: The number of rows in the terminal reserved for drawing the image. This is generally the height of the output terminal window, divided by nrows, and some buffer space for printing titles.\n{width}: The number of columns in the terminal reserved for drawing the image. If smart_size=true, then {width} may be replaced with the string auto in situations where the aspect ratio of the image is such that drawing it with a specific width would overflow the available height. This accounts for the behavior in iTerms's inline graphics protocol where height is ignored if a specific width is given.\n{pixel_height}: The pixel height of the temporary image file, multiplied with scale. This does not include a \"px\" suffix.\n{pixel_width}: The pixel width of the temporary image file, multiplied by scale.\nIf given as an empty string (default), MuxDisplay will attempt to find an available executable and choose parameters based on heuristics. It will attempt to use either the wezterm imgcat command or iTerm's imgcat script. The smart_size, nrows, and use_pixels arguments affect the default imgcat command.\nnrows: The number of image rows that should fit into the pane. This affects the {width} and {height} placeholders in imgcat.\nclear: Whether to issue a clear command to the target pane before display. By default, this is chosen based on the multiplexer (true for :tmux, false for :wezterm)\nsmart_size: If true, the {width} placeholder in imgcat may be replaced with \"auto\" if the image is determined to require a strict height constraint. This depends on an accurate cell_size (at least a cell_size with the correct aspect ratio). With the default imgcat, this option will not affect the output if use_pixels=true.\nscale: A scaling factor for the pixel dimensions of the image, used for the {pixel_height} and {pixel_width} placeholders in imgcat. A primary use case is scale=2.0 to compensate for terminal applications that do not take into account running on a 2x \"retina resolution\" display. Note that scale does not scale the underlying image and has no effect if imgcat does not use the pixel-size placeholders, cf. use_pixels.\nshell: The shell running in the target pane. This determines how the pane is initialized (disabling the prompt, etc.) and reset. If empty, this will determined automatically by queriying the multiplexer for the process running in the pane, with a fallback to \"bash\".\nuse_pixels: If true, default to an imgcat command that uses the pixel dimensions of the image, i.e., the {pixel_height} and {pixel_width} placeholders instead of the {height} and {width} placeholders. This may be combined with scale. A consequence of use_pixels=true is that the images will be displayed at their fixed original size, which may overflow the number of rows and columns available in the terminal.\nThis option has no effect if imgcat is given manually, as it only determines the specific options used for calling iTerm's imgcat command or wezterm imgcat.\nredraw_previous: If set to an integer > 1, for each call to display, first redraw the given number of previous images. This accounts for the lack of scrollback in tmux, allowing to compare the current image with previous images. If using this option, it is recommended to also use clear = true.\ndry_run: If true, to not write any files and do not display any images. To be used for debugging in combination with ENV[\"JULIA_DEBUG\"] = MuxDisplay\nonly_write_files: If true, write image files to tempdir, but do not display them in the target pane. This allows to use MuxDisplay without an actual multiplexer running, under the assumption that the image files can be viewed independently.\nuse_filenames_as_title: If true, print the filename of the temporary file before rendering the image. Note that more descriptive titles can be used by calling MuxDisplay.display.\nsleep_secs: The number of seconds to sleep after drawing each image. This defaults to a heuristic value. If multiplexer=:tmux, and target_pane is a pane in the current window, MuxDisplay needs to actively switch to the target pane, issue the imgcat command, wait for the image to render, and then switch back to the current pane. If sleep_secs to too short so that switching back to the current pane happens before the rendering is complete, the image will be shown in the wrong place. Also, when using redraw_previous to draw multiple images, there may need be be a delay for on image to finish rendering before issuing the command to draw the next image. Typical values are on the order of 0.2-0.5 seconds, possibly longer on laggy connections.\ncell_size: A tuple of for the height and width in pixels of a single cell (character) in the terminal. If given as the default (0, 0), this will be automatically determined by sending the \"16t\" xterm control sequence to the terminal. This could also be determined manually be dividing the pixel size of the terminal window by its size (columns, rows). Only the ratio of height to width matters here, and for many monospaced fonts, this is roughly 2:1. The cell_size is used for the smart_size option.\n\n\n\n\n\n","category":"function"},{"location":"api/#MuxDisplay.enabled","page":"API","title":"MuxDisplay.enabled","text":"Check whether MuxDisplay is active.\n\nMuxDisplay.enabled(; verbose=true)\n\nreturns true if the currently active display (Base.Multimedia.displays[end]) is provided by MuxDisplay. If verbose=true, also show some information about the configuration of the display.\n\n\n\n\n\n","category":"function"},{"location":"api/#MuxDisplay.set_options","page":"API","title":"MuxDisplay.set_options","text":"Modify an active display.\n\nMuxDisplay.set_options(; verbose, kwargs...)\n\noverrides the keyword arguments originally given in MuxDisplay.enable for the currently active display for all future invocations of display.\n\n\n\n\n\n","category":"function"},{"location":"api/#MuxDisplay.display","page":"API","title":"MuxDisplay.display","text":"Show an object with a custom title and other options.\n\nMuxDisplay.display(x; title=\"\", kwargs...)\n\nshows x (which must have a image/png or image/jpeg representation) on the current display, after printing the given title (in lieu of the filename if the display was set up with use_filenames_as_title = true). Additional keyword arguments can be clear, nrows, redraw_previous, imgcat, and use_filenames_as_title, and temporarily override the corresponding options in the display.\n\nNote that this is a different function than Base.display, which does not take keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"api/#MuxDisplay.disable","page":"API","title":"MuxDisplay.disable","text":"Disable using MuxDisplay as the current display.\n\nMuxDisplay.disable(; verbose = true)\n\ndisables the current display if it is managed by MuxDisplay. With verbose=true, also print some information about the settings of the deactivated system, or a warning if the current display is not managed by MuxDisplay.\n\n\n\n\n\n","category":"function"},{"location":"api/#MuxDisplay.install_cellsize","page":"API","title":"MuxDisplay.install_cellsize","text":"Compile the cellsize program from C-source\n\ninstall_cellsize(path=\"~/bin\"; cc=\"cc\", write_source=false)\n\nproduces the executable cellsize inside the given path folder by compiling C source with the cc compiler.\n\nThe resulting executable can be called as\n\ncellsize OUTFILE\n\nand writes the pixel size of a cell (character) to OUTFILE in the format HEIGHTxWIDTH, where HEIGHT and WIDTH are integers. If called without OUTFILE, write to stdout.\n\nIf write_source is given as true, write the C source code for the cellsize executable to cellsize.c inside path, but do not compile it.\n\n\n\n\n\n","category":"function"},{"location":"scenarios/#Scenarios-and-Workflows","page":"Scenarios","title":"Scenarios and Workflows","text":"","category":"section"},{"location":"scenarios/#Choice-of-terminal","page":"Scenarios","title":"Choice of terminal","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"iTerm2\nWezterm\nKitty\nBlink","category":"page"},{"location":"scenarios/#Choice-of-multiplexer","page":"Scenarios","title":"Choice of multiplexer","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"tmux - no scrollbar, so you may want to emulate scrollback with redraw_previous  to show multiple images\nwezterm - scrollback! But you need to install it in matching versions everywhere","category":"page"},{"location":"scenarios/#Choice-of-imgcat-program","page":"Scenarios","title":"Choice of imgcat program","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"iTerm imgcat\nwezterm imgcat","category":"page"},{"location":"scenarios/#Setup-Examples","page":"Scenarios","title":"Setup Examples","text":"","category":"section"},{"location":"scenarios/#Running-Wezterm-locally,-no-tmux","page":"Scenarios","title":"Running Wezterm locally, no tmux","text":"","category":"section"},{"location":"scenarios/#Using-a-tmux-display-pane","page":"Scenarios","title":"Using a tmux display pane","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"Very dependent on finding the right imgcat command.","category":"page"},{"location":"scenarios/#Using-a-tmux-display-session","page":"Scenarios","title":"Using a tmux display session","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"Avoids some of the most common issues with using a pane.","category":"page"},{"location":"scenarios/#Combining-tmux-and-wezterm-multiplexers","page":"Scenarios","title":"Combining tmux and wezterm multiplexers","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"This gives the best results, if you're running WezTerm locally.","category":"page"},{"location":"scenarios/#Using-Blink-on-iOS-with-tmux","page":"Scenarios","title":"Using Blink on iOS with tmux","text":"","category":"section"},{"location":"scenarios/","page":"Scenarios","title":"Scenarios","text":"See \"Using a tmux display session\", slide-over or split view","category":"page"},{"location":"background/#Background","page":"Background","title":"Background","text":"","category":"section"},{"location":"background/#Image-protocols","page":"Background","title":"Image protocols","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"iTerm\nKitty\nSixel","category":"page"},{"location":"background/#Terminals","page":"Background","title":"Terminals","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"Wezterm\niTerm2\nKitty\nBlink (iOS)","category":"page"},{"location":"background/#Multiplexers","page":"Background","title":"Multiplexers","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"Persistent sessions, running remotely. Multiple windows/panes. We need panes as image targets.","category":"page"},{"location":"background/","page":"Background","title":"Background","text":"screen is not suitable. The \"standard\" multiplexer is tmux. WezTerm.","category":"page"},{"location":"background/","page":"Background","title":"Background","text":"Maybe zellij, but haven't tried it.","category":"page"},{"location":"background/","page":"Background","title":"Background","text":"Things that could be made to work as a kind of multiplexer is anything that has the notion of a pane and that is scriptable, in the sense that we can make a specific pane execute commands via issuing commands from an unrelated terminal on the same machine.","category":"page"},{"location":"background/#Tmux","page":"Background","title":"Tmux","text":"","category":"section"},{"location":"background/#WezTerm","page":"Background","title":"WezTerm","text":"","category":"section"},{"location":"background/#Shells","page":"Background","title":"Shells","text":"","category":"section"},{"location":"background/","page":"Background","title":"Background","text":"It is helpful to disable the prompt and echoing.","category":"page"},{"location":"background/#Bash","page":"Background","title":"Bash","text":"","category":"section"},{"location":"background/#Zsh","page":"Background","title":"Zsh","text":"","category":"section"},{"location":"#MuxDisplay","page":"Home","title":"MuxDisplay","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"] add https://github.com/goerz/MuxDisplay.jl.git","category":"page"}]
}
